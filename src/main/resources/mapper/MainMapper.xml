<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.stelling.mapper.MainMapper">
    <!--신작 조회-->
    <select id="getNewNovelList" resultType="NovelDTO">
        SELECT USER_NICKNAME, NOVEL_TITLE, NOVEL_UPLOADPATH, NOVEL_FILENAME, NOVEL_NUMBER
        FROM TBL_NOVEL
        JOIN TBL_USER ON TBL_NOVEL.USER_NUMBER = TBL_USER.USER_NUMBER
        ORDER BY NOVEL_UPLOADDATE DESC
        LIMIT 6;
    </select>

    <!--완결작 조회-->
    <select id="getEndNovelList" resultType="NovelDTO">
        SELECT USER_NICKNAME, NOVEL_TITLE, NOVEL_UPLOADPATH, NOVEL_FILENAME, NOVEL_NUMBER
        FROM TBL_NOVEL
        JOIN TBL_USER ON TBL_NOVEL.USER_NUMBER = TBL_USER.USER_NUMBER
        WHERE NOVEL_STATUS = 2
        ORDER BY NOVEL_UPLOADDATE DESC
        LIMIT 6;
    </select>

    <!--일러스트 조회-->
    <select id="getNewIllustList" resultType="NewIllustDTO">
        SELECT ILLUST_NUMBER, USER_NICKNAME, ILLUSTIMGFILE_FILEPATH, ILLUSTIMGFILE_FILENAME
        FROM TBL_ILLUSTIMGFILE
        JOIN TBL_USER ON TBL_ILLUSTIMGFILE.USER_NUMBER =TBL_USER.USER_NUMBER
        ORDER BY ILLUSTIMGFILE_UPLOADDATE DESC
        LIMIT 6;
    </select>



    <select id="getViewCountSearch" resultType="NovelRankingDTO">
        SELECT
        NOVEL_NUMBER ,
        n.USER_NUMBER,
        u.USER_NICKNAME,
        NOVEL_TITLE ,
        NOVEL_HASHTAG ,
        NOVEL_UPLOADDATE ,
        NOVEL_UPDATEDATE ,
        NOVEL_CATEGORY ,
        NOVEL_STATUS ,
        NOVEL_SERIALSTATUS ,
        NOVEL_INTRO ,
        NOVEL_FILENAME ,
        NOVEL_UPLOADPATH,
        NOVEL_UUID ,
        NOVEL_ROUNDABOUTTOTAL,
        NOVEL_LIKECOUNTTOTAL ,
        NOVEL_VIEWCOUNTTOTAL
        FROM
        (
        SELECT
        NOVEL_NUMBER ,
        USER_NUMBER,
        NOVEL_TITLE ,
        NOVEL_HASHTAG ,
        NOVEL_UPLOADDATE ,
        NOVEL_UPDATEDATE ,
        NOVEL_CATEGORY ,
        NOVEL_STATUS ,
        NOVEL_SERIALSTATUS ,
        NOVEL_INTRO ,
        NOVEL_FILENAME ,
        NOVEL_UPLOADPATH,
        NOVEL_UUID ,
        NOVEL_ROUNDABOUTTOTAL,
        NOVEL_LIKECOUNTTOTAL ,
        NOVEL_VIEWCOUNTTOTAL
        FROM TBL_NOVEL
        <if test="keyword != 'searchAll'.toString()">
            WHERE
            NOVEL_HASHTAG
            LIKE CONCAT('%', #{keyword}, '%')
        </if>
        )  n JOIN TBL_USER u
        ON u.USER_NUMBER  = n.USER_NUMBER
        ORDER BY
        NOVEL_VIEWCOUNTTOTAL
        DESC
        LIMIT 3 ;
    </select>

    <select id="getLikeCountSearch" resultType="NovelRankingDTO">
        SELECT
        NOVEL_NUMBER ,
        n.USER_NUMBER,
        u.USER_NICKNAME,
        NOVEL_TITLE ,
        NOVEL_HASHTAG ,
        NOVEL_UPLOADDATE ,
        NOVEL_UPDATEDATE ,
        NOVEL_CATEGORY ,
        NOVEL_STATUS ,
        NOVEL_SERIALSTATUS ,
        NOVEL_INTRO ,
        NOVEL_FILENAME ,
        NOVEL_UPLOADPATH,
        NOVEL_UUID ,
        NOVEL_ROUNDABOUTTOTAL,
        NOVEL_LIKECOUNTTOTAL ,
        NOVEL_VIEWCOUNTTOTAL
        FROM
        (
        SELECT
        NOVEL_NUMBER ,
        USER_NUMBER,
        NOVEL_TITLE ,
        NOVEL_HASHTAG ,
        NOVEL_UPLOADDATE ,
        NOVEL_UPDATEDATE ,
        NOVEL_CATEGORY ,
        NOVEL_STATUS ,
        NOVEL_SERIALSTATUS ,
        NOVEL_INTRO ,
        NOVEL_FILENAME ,
        NOVEL_UPLOADPATH,
        NOVEL_UUID ,
        NOVEL_ROUNDABOUTTOTAL,
        NOVEL_LIKECOUNTTOTAL ,
        NOVEL_VIEWCOUNTTOTAL
        FROM TBL_NOVEL
        <if test="keyword != 'searchAll'.toString()">
            WHERE
                NOVEL_HASHTAG
                LIKE CONCAT('%', #{keyword}, '%')
        </if>
        )  n JOIN TBL_USER u
        ON u.USER_NUMBER  = n.USER_NUMBER
        ORDER BY
        NOVEL_LIKECOUNTTOTAL
        DESC
        LIMIT 3
    </select>

    <select id="getRoundCountSearch" resultType="NovelRankingDTO">
        SELECT
        NOVEL_NUMBER ,
        n.USER_NUMBER,
        u.USER_NICKNAME,
        NOVEL_TITLE ,
        NOVEL_HASHTAG ,
        NOVEL_UPLOADDATE ,
        NOVEL_UPDATEDATE ,
        NOVEL_CATEGORY ,
        NOVEL_STATUS ,
        NOVEL_SERIALSTATUS ,
        NOVEL_INTRO ,
        NOVEL_FILENAME ,
        NOVEL_UPLOADPATH,
        NOVEL_UUID ,
        NOVEL_ROUNDABOUTTOTAL,
        NOVEL_LIKECOUNTTOTAL ,
        NOVEL_VIEWCOUNTTOTAL
        FROM
        (
        SELECT
        NOVEL_NUMBER ,
        USER_NUMBER,
        NOVEL_TITLE ,
        NOVEL_HASHTAG ,
        NOVEL_UPLOADDATE ,
        NOVEL_UPDATEDATE ,
        NOVEL_CATEGORY ,
        NOVEL_STATUS ,
        NOVEL_SERIALSTATUS ,
        NOVEL_INTRO ,
        NOVEL_FILENAME ,
        NOVEL_UPLOADPATH,
        NOVEL_UUID ,
        NOVEL_ROUNDABOUTTOTAL,
        NOVEL_LIKECOUNTTOTAL ,
        NOVEL_VIEWCOUNTTOTAL
        FROM TBL_NOVEL
        <if test="keyword != 'searchAll'.toString()">
            WHERE
            NOVEL_HASHTAG
            LIKE CONCAT('%', #{keyword}, '%')
        </if>
        )  n JOIN TBL_USER u
        ON u.USER_NUMBER  = n.USER_NUMBER
        ORDER BY
        NOVEL_ROUNDABOUTTOTAL
        DESC
        LIMIT 3
    </select>

    <select id="getBannerImg" resultType="NovelDTO">
        SELECT NOVEL_UPLOADPATH, NOVEL_FILENAME
        FROM TBL_NOVEL
    </select>
</mapper>